---
- name: Check if IntelliJ is already installed
  ansible.builtin.shell:
    cmd: which idea | wc -c
  register: intellij_installed_check
  changed_when: false

- name: End intellij role if IntelliJ is installed
  ansible.builtin.meta: end_role
  when: false and intellij_installed_check.stdout | length > 0

- name: Create a tmp directory
  ansible.builtin.file:
    path: ./tmp
    state: directory

- name: Download IntelliJ Idea package to tmp directory
  ansible.builtin.shell:
    cmd: wget --no-check-certificate {{ intellij_download_url }}
  args:
    chdir: ./tmp
  no_log: true

- name: Register IntelliJ Idea package name
  ansible.builtin.shell:
    cmd: ls . | grep idea.*\.tar\.gz
  register: idea_filename
  args:
    chdir: ./tmp

- name: Unarchive IntelliJ package to /usr/local
  ansible.builtin.unarchive:
    src: ./tmp/{{ idea_filename.stdout }}
    dest: /usr/local
  become: true

- name: Register IntelliJ Idea folder name
  ansible.builtin.shell:
    cmd: ls -d */ | grep idea | head -n 1
  register: idea_foldername
  args:
    chdir: /usr/local

- name: Add IntelliJ bin folder to user .bashrc PATH if not present
  ansible.builtin.lineinfile:
    state: present
    path: ~/.bashrc
    regexp: "^export PATH=\\$PATH:/usr/local/{{ idea_foldername.stdout }}/bin"
    insertafter: '^# USER VARIABLES BEGIN'
    line: export PATH=$PATH:/usr/local/{{ idea_foldername.stdout }}/bin

- name: Add IntelliJ .desktop file 
  ansible.builtin.template:
    src: ./templates/idea.desktop.j2
    dest: /usr/share/applications/idea.desktop
  vars:
    intellij_bin_absolute_path: /usr/local/{{ idea_foldername.stdout }}/bin
  # automatically registers the .dekstop file as trusted. Otherwise, needs executable permissions
  become: true