---
- name: Check if OpenJDK is already installed
  ansible.builtin.shell:
    cmd: echo $JAVA_HOME | tr -d '[:space:]' 
  register: openjdk_check
  changed_when: false

- name: End openjdk role if OpenJDK is installed
  ansible.builtin.meta: end_role
  when: false and openjdk_check.stdout | length > 0

- name: Create a tmp directory
  ansible.builtin.file:
    path: ./tmp
    state: directory

- name: Download OpenJDK package to tmp directory
  ansible.builtin.shell:
    cmd: wget --no-check-certificate {{ openjdk_download_url }}
  args:
    chdir: ./tmp
  no_log: true

- name: Register OpenJDK package name
  ansible.builtin.shell:
    cmd: ls . | grep openjdk.*\.tar\.gz
  register: openjdk_filename
  args:
    chdir: ./tmp

- name: Unarchive OpenJDK package to /usr/local
  ansible.builtin.unarchive:
    src: ./tmp/{{ openjdk_filename.stdout }}
    dest: /usr/local
  become: true

- name: Register OpenJDK folder name
  ansible.builtin.shell:
    cmd: ls -d */ | grep jdk
  register: openjdk_folder_name
  args:
    chdir: /usr/local

- name: Add OpenJDK bin folder to user .bashrc PATH if not present
  ansible.builtin.lineinfile:
    state: present
    path: ~/.bashrc
    line: export PATH=$PATH:/usr/local/{{ openjdk_folder_name.stdout }}/bin
    regexp: "^export PATH=\\$PATH:/usr/local/{{ openjdk_folder_name.stdout }}/bin"
    insertafter: '^# USER VARIABLES BEGIN'

- name: Add JAVA_HOME to user .bashrc if not present
  ansible.builtin.lineinfile:
    state: present
    path: ~/.bashrc
    line: export JAVA_HOME=/usr/local/{{ openjdk_folder_name.stdout }}
    regexp: "^export JAVA_HOME=/usr/local/{{ openjdk_folder_name.stdout }}"
    insertafter: '^# USER VARIABLES BEGIN'

# OpenJDK is now installed - try running java -version (Requires a new terminal session)